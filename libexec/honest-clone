#!/usr/bin/env bash
#
# Usage: honest-clone <git-url>

# Git Url Parameter:
#        <git-url> can be:
#               - https://<git org>/<author>/<project>[@<branch|commit|tag>]
#               - <github|bitbucket|gitlab>:<author>/<project>[@<branch|commit|tag>]

die() {
  local script_name=`basename "$0"`
  echo "$script_name: $1"
  exit 1
}

usage() {
  sed -ne '/^#/!q;s/.\{1,2\}//;1,2d;p' < "$0"
  [ -z "$1" ] || exit "$1"
}

is_start_with() {
  [[ "$1" != "$2"* ]] && return 1
  local str="$1"
  RESULT="${str:${#2}}"
}

abbr_form() {
  # check if url in form <vendor>:<author>/<project>[@..]
  # if yes, convert it to https://<vendor's url>/<author>/<project>[@..]
  local url="$1"
  local vendor_map=("github" "github.com" "bitbucket" "bitbucket.org" "gitlab" "gitlab.com")
  local n=${#vendor_map[@]}
  for (( i=0; i<=$n; i+=2 )); do
    is_start_with "$url" "${vendor_map[$i]}:"
    if [[ $? -eq 0 ]]; then
      RESULT="https://${vendor_map[$i+1]}/$RESULT"
      return 0
    fi
  done
  return 1
}

get_tag() {
  # scan for first '@'
  # therefore, we don't support urls like 'https://author@github.com/author/proj'
  local url="$1"
  local n=${#url}
  for (( i=0; i<=$n; i++ )); do
    if [[ ${url:$i:1} == '@' ]]; then
      REPO=${url:0:$i}
      TAG=${url:$i+1}
    fi
  done
  return 0
}

tmp_dir() {
  # The behavior is a little different betwen Linux and macOS, but it's okay.
  RESULT="$(TMPDIR=$HONEST_TMPDIR mktemp -d -t honest-XXXXXXXXXX)"
}

if [[ $# -ne 1 ]]; then
  usage 1
fi

REPO="$1"
abbr_form "$1"
[[ $? -eq 0 ]] && REPO=$RESULT
get_tag "$REPO"

tmp_dir; path=$RESULT

go_git() {
  set -e
  git clone "$REPO" "$path"
  [[ "$TAG" ]] && cd $path && git checkout "$TAG"
  set +e
}
go_git 1>/dev/null
echo $path
